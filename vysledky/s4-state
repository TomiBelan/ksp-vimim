{"editor_app.price_delete": 4, "game_app.ticks_newspeed_choices": [10, 20, 30, 40, 50, 60], "game_app.price_move": 0, "editor_app.undo_buffer": [["", 0, 0], ["T()", 2, 0], ["T()", 2, 0], ["T()", 2, 0], ["t()", 2, 0], ["T()", 2, 0], [")(T", 2, 1], [")(T", 0, 1], [")(T\n5", 0, 2], [")(T\n5\n", 0, 2], [")(T\n5\n", 0, 2], [")(T\n5\n", 0, 2], [")(T\n5\n", 0, 2], [")(T\n5", 1, 1], [")(T5", 4, 0], [")(T5", 4, 0], [")(", 2, 0], ["", 0, 0], ["", 0, 0], ["", 0, 0], ["<\u2665\n\u2192\u2193\u2190\u2191>", 4, 0], ["\n\u2192\u2193\u2190\u2191>", 0, 0], ["\n\u2192\u2193\u2190\u2191>", 0, 0], ["\n\u2192\u2193\u2190\u2191>", 0, 0], ["\n\u2192\u2193\u2190\u2191>", 0, 2], ["\n\u2192\u2193\u2190\u2191>", 5, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 1], ["\n", 0, 2], ["", 0, 0], ["#", 0, 1], ["#\n", 0, 1], ["#", 0, 0], ["#", 0, 0], ["uu#", 2, 0], ["uu#", 1, 0], ["uu#", 1, 0], ["uu#", 1, 0], ["u`=-u#", 4, 0], ["uu#", 1, 0], ["u#", 0, 1], ["u#", 2, 0], ["u", 1, 0], ["", 0, 0], ["", 0, 0], ["", 0, 0], ["3#", 2, 0], ["3", 1, 0], ["3i", 2, 0], ["", 0, 0], ["i", 0, 0], ["p", 1, 0], ["", 1, 0], ["", 5, 0], ["", 0, 0], ["", 0, 0], ["", 0, 0], ["", 0, 0], ["#nct", 4, 0], ["#nct", 4, 0], ["#nctc", 5, 0], ["#nctcC", 6, 0], ["#nctcC", 6, 0], ["#nctcCuU", 8, 0], ["#nctcCuU", 8, 0], ["#nctcCuU", 8, 0], ["#nctcCuUU", 9, 0], ["#nctcCuUU", 9, 0], ["#nctcCuUUS", 10, 0], ["#", 1, 0], ["", 0, 0], ["", 0, 0], ["E", 1, 0], ["E", 1, 0], ["EE", 2, 0], ["EE", 2, 0], ["EEE", 3, 0], ["", 0, 0], ["#", 1, 0], ["", 0, 0], ["", 0, 0], ["I", 0, 0], ["I", 0, 0], ["EI", 1, 0], ["EaI", 2, 0], ["EaEI", 2, 1], ["EaEI", 0, 1], ["EaEI", 4, 0], ["", 0, 0], ["i", 0, 1], ["i", 1, 0], ["int ma", 6, 0], ["int mai", 0, 1], ["int mai", 7, 0], ["int main(m)", 10, 0], ["int main()", 0, 1], ["int main()", 10, 0], ["int main(){return;}", 17, 0], ["int main(){return 0;}", 0, 0], ["\nint main(){return 0;}", 0, 1], ["\nint main(){return 0;}", 0, 1], ["\nint main(){return 0;}", 0, 2], ["\nint main(){return 0;}", 0, 0], ["\nint main(){return 0;}", 0, 0], ["#\nint main(){return 0;}", 1, 0], ["#i\nint main(){return 0;}", 2, 0], ["#include\nint main(){return 0;}", 8, 0], ["#include <>\nint main(){return 0;}", 10, 0], ["#include <>\nint main(){return 0;}", 10, 0], ["#include <i\nint main(){return 0;}", 11, 0], ["#include <iostream\nint main(){return 0;}", 18, 0], ["#include <iostream>\nint main(){return 0;}", 0, 2], ["#include <iostream>\nint main(){return 0;}", 11, 1], ["#include <iostream>\nint main(){STD::cout << \"44\u2665\u2665\">>return 0;}", 29, 1], ["#include <iostream>\nint main(){STD::cout << \"44\">>return 0;}", 27, 1], ["#include <iostream>\nint main(){STD::cout << \"\">>return 0;}", 25, 1], ["#include <iostream>\nint main(){STD::cout << \"42\\n\u2192s\">>return 0;}", 31, 1], ["#include <iostream>\nint main(){STD::cout << \"42\\n\u2192\">>return 0;}", 30, 1], ["#include <iostream>\nint main(){STD::cout << \"42\\n\">>return 0;}", 30, 1], ["#include <iostream>\nint main(){STD::cout << \"42\\n\";>>return 0;}", 33, 1], ["#include <iostream>\nint main(){STD::cout << \"42\\nreturn 0;}", 29, 1], ["#include <iostream>\nint main(){STD::cout << \"42\\n\"m\"return 0;}", 31, 1], ["#include <iostream>\nint main(){STD::cout << \"42\\n\"\"return 0;}", 30, 1], ["#include <iostream>\nint main(){STD::cout << \"42\\n\"return 0;}", 30, 1], ["#include <iostream>\nint main(){STD::cout << \"42\\n\";return 0;}", 29, 1], ["#include <iostream>\nint main(){STD::cout << \"42\\\";return 0;}", 28, 1], ["#include <iostream>\nint main(){STD::cout << \"42\";return 0;}", 28, 1], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;return 0;}", 39, 0], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;return 0;}", 40, 1], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\nreturn 0;}", 10, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\nreturn 0", 8, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\nreturn ", 7, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\n", 0, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\n", 0, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\n", 0, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\n", 0, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\n", 0, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\n", 0, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\n", 0, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\n", 0, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\n", 0, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\n", 0, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\n", 0, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\n", 0, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;\n", 0, 2], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl;", 40, 1], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::endl", 39, 1], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std::", 35, 1], ["#include <iostream>\nint main(){STD::cout << \"42\"<<std", 33, 1], ["#include <iostream>\nint main(){STD::cout << \"42\"<<", 30, 1], ["#include <iostream>\nint main(){STD::cout << \"42", 27, 1], ["#include <iostream>\nint main(){STD::cout << \"", 25, 1], ["#include <iostream>\nint main(){STD::cout", 20, 1], ["#include <iostream>\nint main(){STD::", 16, 1], ["#include <iostream>\nint main(){STD", 14, 1], ["#include <iostream>\nint main(){", 11, 1], ["#include <iostream>\nint main", 8, 1], ["#include <iostream>\nint ", 4, 1], ["#include <iostream>\n", 0, 1], ["#include <iostream>\n", 0, 1], ["#include <iostream>\n", 0, 1], ["#include <iostream>\n", 0, 1], ["#include <iostream>\n", 0, 1], ["#include <iostream>", 19, 0], ["#include <iostream", 18, 0], ["#include <", 10, 0], ["#include", 8, 0], ["#", 1, 0], ["", 0, 0], ["", 0, 0], ["", 0, 0], ["", 0, 0], ["", 0, 0], ["", 0, 0], ["aaa\naaa\naaa", 0, 2], ["aaa\naaa\naaa", 0, 3], ["aaa\naaa\naaa", 0, 0], ["     aaa\naaa\naaa", 1, 1], ["     aaa\nAAA\naaa", 1, 1], ["     aaa\nAaAA\naaa", 1, 1], ["     aaa\naAaa\naaa", 1, 1], ["     aaa\nAaAA\naaa", 1, 2], ["     aaa\nAaAA\naaa", 1, 2], ["     aaa\nAaAA\naaa", 1, 2], ["     aaa\nAaAA\nAAA", 1, 2], ["     aaa\nAAA\nAaAA", 1, 2], ["     aaa\nAAA\nAaAA", 1, 2], ["     aaa\nAAA\naAaa", 1, 2], ["     aaa\nAAA\naAaa", 1, 1], ["     aaa\naaa\naAaa", 0, 0], ["     aaa\naAaa\naaa", 0, 0], ["     aaa\naAaa\naaa", 0, 1], ["     aaa\naAaa\naaa", 0, 2], ["     aaa\naAaa\naaa", 3, 3], ["     aaa\naAaa\naaa\n   o\n   o", 3, 4], ["     aaa\naAaa\naaa\n   o\no", 0, 4], ["     aaa\naAaa\naaa\n   oo", 4, 3], ["     aaa\naAaa\naaa   oo", 7, 2], ["     aaa\naAaaaaa   oo", 11, 1], ["     aaaaAaaaaa   oo", 19, 0], ["     aaaaAaaaaa   oo", 20, 0], ["     aaaaAaaaaa   ", 18, 0], ["     ", 5, 0], ["", 0, 0], ["#", 1, 0], ["#i", 2, 0], ["#include <>", 10, 0], ["#include <c>", 10, 0], ["#include <i>", 11, 0], ["#include <iostream>", 0, 1], ["#include <iostream>", 0, 1], ["#include <iostream>\ni", 1, 1], ["#include <iostream>\nint ma", 6, 1], ["#include <iostream>\nint mai", 7, 1], ["#include <iostream>\nint main", 8, 1], ["#include <iostream>\nint main9", 9, 1], ["#include <iostream>\nint ", 4, 1], ["#include <iostream>\nint ma", 6, 1], ["#include <iostream>\nint ma", 6, 1], ["#include <iostream>\nint mai", 7, 1], ["#include <iostream>\nint main( )", 11, 1], ["#include <iostream>\nint main( ) {\nstd::cout << 42 << std::endl; >>>>}", 35, 2], ["#include <iostream>\nint main( ) {\nstd::cout << 42 << std::endl", 28, 2], ["#include <iostream>\nint main( ) {\nstd::cout << 42 << std::endl;\nreturn 0;\n}", 15, 2], ["#include <iostream>\nint main( ) {\nstd::cout <<  << std::endl;\nreturn 0;\n}", 13, 2], ["#include <iostream>\nint main( ) {\nstd::cout << std::endl;\nreturn 0;\n}", 9, 2], ["#include <iostream>\nint main( ) {\nstd::cout << >> << std::endl;\nreturn 0;\n}", 15, 2], ["#include <iostream>\nint main( ) {\nstd::cout << >> << std::endl;\nreturn 0;\n}", 15, 2], ["#include <iostream>\nint main( ) {\nstd::cout << >>a << std::endl;\nreturn 0;\n}", 16, 2], ["#include <iostream>\nint main( ) {\nstd::cout << >>a << std::endl;\nreturn 0;\n}", 16, 2], ["#include <iostream>\nint main( ) {\nstd::cout << >>aa << std::endl;\nreturn 0;\n}", 17, 2], ["#include <\nint mai (\nstd::cout              d:  ndl;\nreturn 0\n}\n\n\n\n\n", 17, 2], ["#include\nint mai (\nstd::cout                  ndl;\nreturn\n}\n\n\n\n\n", 17, 2], ["#include\nint mai (\nstd::cout                  ndl;\nreturn\n}\n\n\n\n\n", 17, 2], ["#include\nint mai (\nstd::cout        a          ndl;\nreturn\n}\n\n\n\n\n", 18, 2], ["#include\nint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n", 27, 1], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n", 5, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n\n", 0, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n\na", 1, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n\n\n", 1, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n\n\n", 1, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n\n\n", 0, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n\naaa\n", 3, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n\n\n", 0, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n\n", 0, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n\na", 1, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n", 0, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n\naa", 2, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n", 0, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n\na", 1, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n\n", 0, 8], ["#includeint mai (std::cout        a          ndl;\nreturn\n}\n\n\n\n\n\naaa", 3, 8], ["", 0, 0], ["aaa", 3, 0], ["aaa", 3, 0], ["aaaaa", 5, 0], ["aaaaa", 5, 0], ["aaaaaa", 6, 0], ["aaaaaa", 6, 0], ["aaaaaaa", 5, 0], ["aaaaaaa", 5, 0], ["aaaaaaa\n     ", 5, 2], ["aaaaaaa\n     \n", 0, 2], ["aaaaaaa\n     \n", 0, 2], ["aaaaaaa\n", 0, 1], ["aaaaaaa", 7, 0], ["", 0, 0], ["#", 1, 0], ["#i", 2, 0], ["#include <>", 10, 0], ["#include <>", 10, 0], ["#include <i", 10, 0], ["#include <oi", 12, 0], ["#include <", 10, 0], ["#include <i", 11, 0], ["#include <iostream>\n", 0, 1], ["#include <iostream>\ni", 1, 1], ["#include <iostream>\nint ma", 6, 1], ["#include <iostream>\nint mai", 7, 1], ["#include <iostream>\nint main() {\nstd::cout << \"\"", 15, 2], ["#include <iostream>\nint main() {\nstd::cout", 9, 2], ["#include <iostream>\nint main() {\nstd::cout << \"", 14, 2], ["#include <iostream>\nint main() {\nstd::cout << \"v", 15, 2], ["#include <iostream>\nint main() {\nstd::cout << \"vi", 16, 2], ["#include <iostream>\nint main() {\nstd::cout << \"vi", 16, 2], ["#include <iostream>\nint main() {\nstd::cout << \"vim", 17, 2], ["#include <iostream>\nint main() {\nstd::cout << \"vimi", 18, 2], ["#include <iostream>\nint main() {\nstd::cout << \"vimim", 19, 2], ["#include <iostream>\nint main() {\nstd::cout << \"", 14, 2], ["#include <iostream>\nint main() {\nstd::cout << \"Vo", 16, 2], ["#include <iostream>\nint main() {\nstd::cout << \"", 14, 2], ["#include <iostream>\nint main() {\nstd::cout << \"V", 15, 2], ["#include <iostream>\nint main() {\nstd::cout << \"Vi", 16, 2], ["#include <iostream>\nint main() {\nstd::cout << \"Vim", 17, 2], ["#include <iostream>\nint main() {\nstd::cout << \"Vimi", 18, 2], ["#include <iostream>\nint main() {\nstd::cout << \"Vimim je super", 14, 2], ["#include <iostream>\nint main() {\nstd::cout << \"'\\Vimim je super", 15, 2], ["#include <iostream>\nint main() {\nstd::cout\\Vimim je super", 9, 2], ["#include <iostream>\nint main() {\nstd::cout<< \"\\Vimim je super", 14, 2], ["#include <iostream>\nint main() {\nstd::cout<< \"\\:Vimim je super", 15, 2], ["#include <iostream>\nint main() {\nstd::coutVimim je super", 9, 2], ["#include <iostream>\nint main() {\nstd::cout<< \"\\:Vimim je super", 15, 2], ["#include <iostream>\nint main() {\nstd::cout<< \"\\ V mim je super\n", 14, 2], ["#include <iostream>\nint main() {\nstd::cout<< \"\\\" V mim je super\n", 30, 2], ["#include <iostream>\nint main() {\nstd::cout<< \"\\\" V mim je \n", 25, 2], ["#include <iostream>\nint main() {\nstd::cout<< \"\\\" V mim \n", 22, 2], ["#include <iostream>\nint main() {\nstd::cout<< \"\\\" V \n", 18, 2], ["#include <iostream>\nint main() {\nstd::cout<< \"\\\" \n", 16, 2], ["#include <iostream>\nint main() {\nstd::cout\n", 9, 2], ["#include <iostream>\nint main() {\nstd::\n", 5, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"V\n", 17, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vi\n", 18, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vim\n", 19, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimi\n", 20, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je u\n", 26, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je \n", 25, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character\nsrc.cpp: In function 'int main()':\nsrc.cpp:4:1: error: expected ';' before 'return'\nCan't compile file.", 0, 11], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character\nsrc.cpp: In function 'int main()':\nsrc.cpp:4:1: error: expected ';' before 'return'\nCan't compile file.", 19, 10], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character\nsrc.cpp: In function 'int main()':\nsrc.cpp:4:1: error: expected ';' before 'return'\nCan't compile file", 18, 10], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character\nsrc.cpp: In function 'int main()':\nsrc.cpp:4:1: error: expected ';' before 'return'\nCan't compile ", 14, 10], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character\nsrc.cpp: In function 'int main()':\nsrc.cpp:4:1: error: expected ';' before 'return'\nCan't ", 6, 10], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character\nsrc.cpp: In function 'int main()':\nsrc.cpp:4:1: error: expected ';' before 'return'\nCan'", 4, 10], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character\nsrc.cpp: In function 'int main()':\nsrc.cpp:4:1: error: expected ';' before 'return'\nCan", 3, 10], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character\nsrc.cpp: In function 'int main()':\nsrc.cpp:4:1: error: expected ';' before 'return'\n", 0, 10], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character\nsrc.cpp: In function 'int main()':\nsrc.cpp:4:1: error: expected ';' before 'return'\n", 0, 10], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character\nsrc.cpp: In function 'int main()':\nsrc.cpp:4:1: error: expected ';' before 'return'", 48, 9], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character\nsrc.cpp: In function 'int main()':\n.:4:1: :  ';'  ''", 17, 9], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character\nsrc.cpp: In function 'int main()':\n.:4:1: :  ';'  ''", 17, 9], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character\nsrc.cpp: In function 'int main()':", 0, 9], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character\nsrc.cpp: In function 'int main()':", 34, 8], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character", 0, 8], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]\nsrc.cpp:3:1: error: missing terminating \" character", 51, 7], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]", 0, 7], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program\nsrc.cpp:3:34: warning: missing terminating \" character [enabled by default]", 75, 6], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program", 0, 6], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}\nsrc.cpp:3:1: error: stray '\\' in program", 40, 5], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}", 0, 5], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;\n}", 1, 4], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;\nreturn 0;}", 10, 3], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;return 0;}", 58, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;return 0;}\u2190", 59, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;return 0", 56, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;return 0}", 56, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\"\\\" << std::endl;return 0;}", 33, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super\" << std::endl;return 0;}", 30, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 0, 14], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 13, 13], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n", 0, 13], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n", 0, 12], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 12], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 11], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 11], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 10], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 10], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 9], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 0, 9], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 7, 8], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 0, 8], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 7, 7], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 0, 7], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 10, 6], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 0, 6], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 32, 5], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 0, 5], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 39, 4], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...", 0, 4], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}\nTesting task...", 15, 3], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}", 0, 3], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}", 48, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;\nreturn 0;}", 0, 3], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}", 48, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super!\\\"\" << std::endl;return 0;}", 34, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je super << std::endl;return 0;}", 30, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je  << std::endl;return 0;}", 25, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim je << std::endl;return 0;}", 24, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim  << std::endl;return 0;}", 22, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\"Vimim << std::endl;return 0;}", 21, 2], ["#include <iostream>\nint main() {\nstd::cout << \"\\\" << std::endl;return 0;}", 16, 2], ["#include <iostream>\nint main() {\nstd::cout << std::endl;return 0;}", 9, 2], ["#include <iostream>\nint main() {\nstd::cout << 44  << std::endl;return 0;}", 12, 1], ["#include <iostream>\nint main() {\nfor (\nstd::cout << 44  << std::endl;return 0;}", 5, 2], ["#include <iostream>\nint main() {\nfor (i\nstd::cout << 44  << std::endl;return 0;}", 6, 2], ["#include <iostream>\nint main() {\nfor (int j = 0\nstd::cout << 44  << std::endl;return 0;}", 14, 2], ["#include <iostream>\nint main() {\nfor (int j = \nstd::cout << 44  << std::endl;return 0;}", 13, 2], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j++) std::cout << j << \" \";aaam\nstd::cout << 44  << std::endl;return 0;}", 54, 2], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j++) std::cout << j << \" \";\nstd::cout << 44  << std::endl;return 0;}", 26, 2], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j) std::cout << j << \" \";\nstd::cout << 44  << std::endl;return 0;}", 24, 2], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK\nstd::cout << 44  << std::endl;return 0;}", 0, 15], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK\nstd::cout << 44  << std::endl;return 0;}", 40, 14], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 0, 14], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 13, 13], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n", 0, 13], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n", 0, 12], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 12], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 11], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 11], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 10], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 10], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 9], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 0, 9], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 7, 8], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 0, 8], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 7, 7], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 0, 7], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 10, 6], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 0, 6], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 32, 5], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 0, 5], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 39, 4], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...", 0, 4], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";\nTesting task...", 15, 3], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";", 0, 3], ["#include <iostream>\nint main() {\nfor (int j = 77; j>44; j--) std::cout << j << \" \";", 50, 2], ["#include <iostream>\nint main() {", 0, 2], ["#include <iostream>\nint main() {\ni", 1, 2], ["#include <iostream>\nint main() {\nint j, k;\nstd::c", 6, 3], ["#include <iostream>\nint main() {\nint j, k;\nstd::ci", 7, 3], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin << ", 12, 3], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin", 8, 3], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd ", 4, 4], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\n", 0, 4], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 0, 53], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 13, 52], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n", 0, 52], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n", 0, 51], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 51], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 50], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 50], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 50], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 49], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 49], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 48], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1\nTime: 0", 0, 48], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1\nTime: 0", 7, 47], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1", 0, 47], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 1", 7, 46], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...", 0, 46], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...", 10, 45], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********", 0, 45], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********", 32, 44], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 44], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 43], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK", 0, 43], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK", 10, 42], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0", 0, 42], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0", 11, 41], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0", 0, 41], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0", 7, 40], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4", 0, 40], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4", 7, 39], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...", 0, 39], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...", 10, 38], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********", 0, 38], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********", 32, 37], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 37], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 36], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 36], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 36], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 35], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 35], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 34], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0", 0, 34], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1\nTime: 0", 7, 33], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1", 0, 33], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 1", 7, 32], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...", 0, 32], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...", 10, 31], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********", 0, 31], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********", 32, 30], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 30], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 29], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK", 0, 29], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK", 0, 29], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0\nErrors: OK", 10, 28], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0", 0, 28], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0\nExitCode: 0", 11, 27], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0", 0, 27], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8\nTime: 0", 7, 26], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8", 0, 26], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 8", 7, 25], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 0, 25], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 10, 24], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 0, 24], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 32, 23], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 23], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 22], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK", 0, 22], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK", 10, 21], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0", 0, 21], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0", 11, 20], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0", 0, 20], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2\nTime: 0", 7, 19], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2", 0, 19], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 2", 7, 18], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 0, 18], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 10, 17], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 0, 17], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 32, 16], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 16], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 15], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 15], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 14], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 14], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 13], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 0, 13], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 7, 12], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 0, 12], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 7, 11], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 0, 11], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 10, 10], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 0, 10], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 32, 9], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 0, 9], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 39, 8], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...", 0, 8], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}\nTesting task...", 15, 7], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}", 0, 7], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;\n}", 1, 6], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nstd::cout << j*k << std::endl;\nreturn 0;}", 30, 4], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;\nreturn 0;}", 0, 4], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> k;return 0;}", 19, 3], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> kreturn 0;}", 18, 3], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> j >> return 0;}", 17, 3], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> jreturn 0;}", 13, 3], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> return 0;}", 12, 3], ["#include <iostream>\nint main() {\nint j, k;\nstd::cin >> \nreturn 0;}", 9, 2], ["#include <iostream>\nint main() {\nint j, k\nstd::cin >> \nreturn 0;}", 8, 2], ["#include <iostream>\nint main() {\nint j, \nstd::cin >> \nreturn 0;}", 7, 2], ["#include <iostream>\nint main() {\nint j\nstd::cin >> \nreturn 0;}", 5, 2], ["#include <iostream>\nint main() {\nint \nstd::cin >> \nreturn 0;}", 4, 2], ["#include <iostream>\nint main() {\n\nstd::cin >> \nreturn 0;}", 0, 2], ["#include <iostream>\nint main() {\nlong long \nstd::cin >> \nreturn 0;}", 3, 6], ["#include <iostream>\nint main() {\nlong long\nreturn 0;}\nstd::cin >>", 0, 5], ["#include <iostream>\nint main() {\nlong long\nreturn 0;}\nstd::cin >>", 11, 4], ["#include <iostream>\nint main() {\nlong long\nreturn 0;}", 9, 2], ["#include <iostream>\nint main() {\nlong long j;\nstd:;\nreturn 0;}", 5, 3], ["#include <iostream>\nint main() {\nlong long j;\nstd\nreturn 0;}", 3, 3], ["#include <iostream>\nint main() {\nlong long j;\nstd::c\nreturn 0;}", 6, 3], ["#include <iostream>\nint main() {\nlong long j;\nstd::ci\nreturn 0;}", 7, 3], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin ..\nreturn 0;}", 11, 3], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin\nreturn 0;}", 8, 3], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK\nreturn 0;}", 0, 38], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK\nreturn 0;}", 10, 37], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 0, 37], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 13, 36], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n", 0, 36], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n", 0, 35], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 35], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 34], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK", 0, 34], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK", 10, 33], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0", 0, 33], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0", 11, 32], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3\nTime: 0", 0, 32], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3\nTime: 0", 7, 31], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3", 0, 31], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 3", 7, 30], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...", 0, 30], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...", 10, 29], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********", 0, 29], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********", 32, 28], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 28], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 27], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK", 0, 27], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK", 10, 26], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0", 0, 26], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0", 11, 25], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0", 0, 25], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0\nTime: 0", 7, 24], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0", 0, 24], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 0", 7, 23], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 0, 23], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 10, 22], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 0, 22], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 32, 21], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 21], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 20], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 20], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 19], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 19], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 18], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0", 0, 18], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0", 7, 17], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1", 0, 17], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1", 7, 16], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 0, 16], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 10, 15], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 0, 15], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 32, 14], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 14], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 13], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 13], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 12], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0Errors: OK", 21, 11], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 0, 11], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 7, 10], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 0, 10], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 7, 9], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 0, 9], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 10, 8], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 0, 8], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 32, 7], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 0, 7], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 39, 6], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...", 0, 6], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;\nTesting task...", 15, 5], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 0, 5], ["#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 12, 2], ["#include <iostream>\nint main() {long long j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 24, 1], ["#include <iostream>\nint main() {long long j\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 23, 1], ["#include <iostream>\nint main() {long long \nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 22, 1], ["#include <iostream>\nint main() {long \nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 17, 1], ["#include <iostream>\nint main() {\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 12, 1], ["#include <iostream>\nint main() {\n\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 8, 8], ["\n#include <iostream>\nint main() {\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 8, 0], ["\n#include <iostream>\nint main() {\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 0, 0], ["\n#include <iostream>\nint main() {\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 12, 2], ["\n#include <iostream>\nint main() {\n\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 0, 3], ["\n#include <iostream>\nint main() {\ni\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 1, 3], ["\n#include <iostream>\nint main() {\nint j;\nstd::c\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 6, 4], ["\n#include <iostream>\nint main() {\nint j;\nstd::ci\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 7, 4], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nstd::cin >> j;\nstd::cout << (j*(j+1))/2 << std::endl;", 14, 5], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nstd::cin >> j\nstd::cout << (j*(j+1))/2 << std::endl;", 13, 5], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nstd::cin >> \nstd::cout << (j*(j+1))/2 << std::endl;", 12, 5], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nstd::cin\nstd::cout << (j*(j+1))/2 << std::endl;", 8, 5], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nstd::\nstd::cout << (j*(j+1))/2 << std::endl;", 5, 5], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nstd\nstd::cout << (j*(j+1))/2 << std::endl;", 3, 5], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\n\nstd::cout << (j*(j+1))/2 << std::endl;", 1, 5], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\n\nstd::cout << (j*(j+1))/2 << std::endl;", 0, 5], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nfor(\nstd::cout << (j*(j+1))/2 << std::endl;", 4, 5], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nfor(i\nstd::cout << (j*(j+1))/2 << std::endl;", 5, 5], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nfor(int k = j; k > 1; k--) { j *= k; }\nstd::cout << (j*(j+1))/2 << std::endl;", 13, 5], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << (j*(j+1))/2 << std::endl;", 24, 6], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << (j*(j+1))/ << std::endl;", 23, 6], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << (j*(j+1 << std::endl;", 20, 6], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << (j*(j+ << std::endl;", 19, 6], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << (j*(j << std::endl;", 18, 6], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << (j*( << std::endl;", 17, 6], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << (j << std::endl;", 15, 6], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << ( << std::endl;", 14, 6], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << std::endl;", 9, 6], ["\n#include <iostream>\nint main() {\nint j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;", 15, 3], ["\n#include <iostream>\nint main() {\nint j\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;", 5, 3], ["\n#include <iostream>\nint main() {\nint \nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;", 4, 3], ["\n#include <iostream>\nint main() {\n\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;", 0, 3], ["\n#include <iostream>\nint main() {\nlog l\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;", 5, 3], ["\n#include <iostream>\nint main() {\nlog \nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;", 4, 3], ["\n#include <iostream>\nint main() {\n\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;", 0, 3], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;", 0, 7], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nWRONG ANSWER", 1, 34], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nWRONG ANSWER\n\n", 1, 33], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nWRONG ANSWER\n", 0, 33], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nWRONG ANSWER\n", 0, 32], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nWRONG ANSWER", 0, 32], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nWRONG ANSWER", 12, 31], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK", 0, 31], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK", 10, 30], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0", 0, 30], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0", 11, 29], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0", 0, 29], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0", 7, 28], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2", 0, 28], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2", 7, 27], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 0, 27], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 10, 26], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 0, 26], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 32, 25], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 25], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 24], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 24], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 23], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 23], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 22], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0", 0, 22], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0", 7, 21], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1", 0, 21], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1", 7, 20], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 0, 20], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 10, 19], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 0, 19], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 32, 18], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 18], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 17], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 17], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 16], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 16], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 15], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 0, 15], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 7, 14], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 0, 14], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 7, 13], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 0, 13], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 10, 12], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 0, 12], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 32, 11], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 0, 11], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 39, 10], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}\nTesting task...Using parameters: -a0 -f -m25600 -t2000", 54, 9], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}", 0, 9], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(int k = j-1; k > 1; k--) { j *= k; }\nstd::cout << j  << std::endl;\nreturn 0;\n}", 4, 5], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nWRONG ANSWER\nstd::cout << j  << std::endl;\nreturn 0;\n}", 14, 28], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OKWRONG ANSWER\nstd::cout << j  << std::endl;\nreturn 0;\n}", 24, 27], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nstd::cout << j  << std::endl;\nreturn 0;\n}", 0, 27], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0std::cout << j  << std::endl;\nreturn 0;\n}", 11, 26], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 1\nTime: 0\nreturn 0;\n}", 0, 26], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 1\nTime: 0return 0;\n}", 7, 25], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 1\n}", 0, 25], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 1}", 7, 24], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 0, 24], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 0, 24], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 0, 24], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 10, 23], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 0, 23], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 32, 22], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 22], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 21], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK", 0, 21], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK", 10, 20], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0", 0, 20], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0", 11, 19], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0", 0, 19], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0\nTime: 0", 7, 18], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0", 0, 18], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 0", 7, 17], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 0, 17], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 10, 16], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 0, 16], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 32, 15], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 15], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 14], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 14], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 13], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 13], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 12], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 0, 12], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 7, 11], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 0, 11], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 7, 10], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 0, 10], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 10, 9], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 0, 9], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 32, 8], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 0, 8], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 39, 7], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...", 0, 7], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nTesting task...", 15, 6], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }", 0, 6], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }", 50, 5], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\n", 1, 6], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\n", 0, 6], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\n", 0, 6], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\ni", 1, 6], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j ,< std::endl;", 18, 7], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << jstd::endl;", 14, 7], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;", 28, 7], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 0, 49], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 13, 48], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n", 0, 48], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n", 0, 47], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 47], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 46], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK", 0, 46], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK", 10, 45], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0", 0, 45], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0", 11, 44], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 0\nTime: 0", 0, 44], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 0\nTime: 0", 7, 43], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 0", 0, 43], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 0", 7, 42], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...", 0, 42], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...", 10, 41], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********", 0, 41], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********", 32, 40], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 40], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 39], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK", 0, 39], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK", 10, 38], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0", 0, 38], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0", 11, 37], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0", 0, 37], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5\nTime: 0", 7, 36], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5", 0, 36], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 5", 7, 35], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...", 0, 35], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...", 10, 34], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********", 0, 34], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********", 32, 33], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 33], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 32], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK", 0, 32], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0\nErrors: OK", 10, 31], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0", 0, 31], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0\nExitCode: 0", 11, 30], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0", 0, 30], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9\nTime: 0", 7, 29], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9", 0, 29], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 9", 7, 28], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 0, 28], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 10, 27], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 0, 27], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 32, 26], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 26], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 25], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 25], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 24], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 24], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 23], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0", 0, 23], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0", 7, 22], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1", 0, 22], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1", 7, 21], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 0, 21], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 10, 20], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 0, 20], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 32, 19], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 19], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 18], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 18], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 17], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 17], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 16], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 0, 16], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 7, 15], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 0, 15], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 7, 14], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 0, 14], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 10, 13], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 0, 13], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 32, 12], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 0, 12], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 39, 11], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...", 0, 11], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}\nTesting task...", 15, 10], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 0, 10], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 12, 3], ["\n#include <iostream>\nint main() {\nlong long j;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 11, 3], ["\n#include <iostream>\nint main() {\nlong long j, k, l;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 18, 3], ["\n#include <iostream>\nint main() {\nlong long j, k, l\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 17, 3], ["\n#include <iostream>\nint main() {\nlong long j, k, \nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 16, 3], ["\n#include <iostream>\nint main() {\nlong long j, k\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 14, 3], ["\n#include <iostream>\nint main() {\nlong long j, \nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 12, 3], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 26, 3], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 1, 4], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 0, 4], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 0, 4], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\ni\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 1, 4], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\nforg\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 4, 6], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 0, 6], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl;\nreturn 0;\n}", 28, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::endl\nreturn 0;\n}", 27, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std::\nreturn 0;\n}", 23, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << std\nreturn 0;\n}", 21, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j << \nreturn 0;\n}", 18, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << j\nreturn 0;\n}", 14, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout << \nreturn 0;\n}", 13, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::cout\nreturn 0;\n}", 9, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd::\nreturn 0;\n}", 5, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nstd\nreturn 0;\n}", 3, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\n\nreturn 0;\n}", 0, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\n\nreturn 0;\n}", 0, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\n\nreturn 0;\n}", 0, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\n\nreturn 0;\n}", 0, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\n\nreturn 0;\n}", 0, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1;\nreturn 0;\n}", 17, 9], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = 1\nreturn 0;\n}", 16, 9], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j = \nreturn 0;\n}", 15, 9], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) j\nreturn 0;\n}", 12, 9], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0) \nreturn 0;\n}", 11, 9], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == 0\nreturn 0;\n}", 9, 9], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j == \nreturn 0;\n}", 8, 9], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(j\nreturn 0;\n}", 4, 9], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif(\nreturn 0;\n}", 3, 9], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nif\nreturn 0;\n}", 2, 9], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\n\nreturn 0;\n}", 0, 9], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k; }\nreturn 0;\n}", 50, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= k\nreturn 0;\n}", 47, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j *= \nreturn 0;\n}", 46, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { j\nreturn 0;\n}", 42, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k--) { \nreturn 0;\n}", 41, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; k\nreturn 0;\n}", 35, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1; \nreturn 0;\n}", 34, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > 1\nreturn 0;\n}", 32, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k > \nreturn 0;\n}", 31, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; k\nreturn 0;\n}", 28, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1; \nreturn 0;\n}", 27, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-1\nreturn 0;\n}", 25, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j-\nreturn 0;\n}", 24, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = j\nreturn 0;\n}", 23, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k = \nreturn 0;\n}", 22, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int k\nreturn 0;\n}", 19, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long int \nreturn 0;\n}", 18, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long long \nreturn 0;\n}", 14, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(long \nreturn 0;\n}", 9, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor(\nreturn 0;\n}", 4, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nfor\nreturn 0;\n}", 3, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\n\nreturn 0;\n}", 0, 8], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j;\nreturn 0;\n}", 14, 7], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> j\nreturn 0;\n}", 13, 7], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin >> \nreturn 0;\n}", 12, 7], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::cin\nreturn 0;\n}", 8, 7], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd::\nreturn 0;\n}", 5, 7], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nstd\nreturn 0;\n}", 3, 7], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\n\nreturn 0;\n}", 0, 7], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\n\nreturn 0;\n}", 0, 7], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nreturn 0;\n}", 0, 6], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\n\nreturn 0;\n}", 0, 6], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\nreturn 0;\n}", 26, 3], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::c\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\nreturn 0;\n}", 6, 4], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::ci\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\nreturn 0;\n}", 7, 4], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\nreturn 0;\n}", 15, 6], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\n\nreturn 0;\n}", 0, 6], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 2\nreturn 0;\n}", 20, 6], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = \nreturn 0;\n}", 19, 6], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << stdL\nreturn 0;\n}", 22, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << \nreturn 0;\n}", 18, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK\nreturn 0;\n}", 0, 73], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK\nreturn 0;\n}", 1, 72], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK\nreturn 0;", 0, 72], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK\nreturn 0;", 9, 71], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 0, 71], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 13, 70], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n", 0, 70], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n", 0, 69], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 69], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 68], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK", 0, 68], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK", 10, 67], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0", 0, 67], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0", 11, 66], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0", 0, 66], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4\nTime: 0", 7, 65], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4", 0, 65], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 4", 7, 64], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...", 0, 64], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...", 10, 63], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********", 0, 63], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********", 32, 62], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 62], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 61], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK", 0, 61], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK", 10, 60], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0", 0, 60], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0", 11, 59], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0", 0, 59], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2\nTime: 0", 7, 58], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2", 0, 58], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 2", 7, 57], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...Wall: 2", 17, 56], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********", 0, 56], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********", 32, 55], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 55], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 54], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK", 0, 54], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK", 10, 53], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0", 0, 53], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0", 11, 52], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0", 0, 52], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6\nTime: 0", 7, 51], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6", 0, 51], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 6", 7, 50], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...", 0, 50], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...", 10, 49], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********", 0, 49], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********", 32, 48], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 48], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 47], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK", 0, 47], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK", 10, 46], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0", 0, 46], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0", 11, 45], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0", 0, 45], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4\nTime: 0", 7, 44], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4", 0, 44], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 4", 7, 43], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...", 0, 43], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...", 10, 42], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********", 0, 42], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********", 32, 41], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 41], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 40], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK", 0, 40], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK", 10, 39], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0", 0, 39], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0", 11, 38], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0", 0, 38], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4\nTime: 0", 7, 37], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4", 0, 37], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 4", 7, 36], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...", 0, 36], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...", 10, 35], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********", 0, 35], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********", 32, 34], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 34], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 33], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK", 0, 33], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK", 10, 32], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0", 0, 32], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0", 11, 31], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0", 0, 31], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0", 7, 30], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4", 0, 30], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4", 7, 29], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 0, 29], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 10, 28], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 0, 28], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 32, 27], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 27], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 26], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK", 0, 26], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0\nErrors: OK", 10, 25], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0", 0, 25], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0\nExitCode: 0", 11, 24], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0", 0, 24], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6\nTime: 0", 7, 23], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6", 0, 23], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 6", 7, 22], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 0, 22], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 10, 21], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 0, 21], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 32, 20], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 20], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 19], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 19], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 18], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 18], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 17], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 0, 17], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1\nTime: 0", 7, 16], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 0, 16], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 1", 7, 15], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 0, 15], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 10, 14], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 0, 14], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 32, 13], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 0, 13], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 39, 12], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...", 0, 12], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nTesting task...", 15, 11], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;", 0, 11], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;", 28, 10], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nreturn 0;", 9, 11], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nreturn 0;}", 10, 0], ["\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nreturn 0;}", 0, 0], ["#\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nreturn 0;}", 1, 0], ["#\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nreturn 0;}", 1, 0], ["#i\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nreturn 0;}", 2, 0], ["#include <str\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nreturn 0;}\n\n\n\n\n\n", 13, 0], ["#include <stri\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nreturn 0;}\n\n\n\n\n\n", 14, 0], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nreturn 0;}\n\n\n\n\n\n", 17, 12], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\nreturn 0;}\n\n\n\n\n", 27, 11], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\n\n\n\n\n", 0, 11], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\nstd::cout << a << std::endl;\n\n\n\n", 28, 10], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\n\n\n\n", 0, 10], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n}\n\n\n", 1, 9], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n\n\n", 0, 9], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\nstd::swap(a, b);\n\n", 16, 8], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\n\n", 0, 8], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\nb += a;\n", 7, 7], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {\n", 0, 7], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}\nfor( long long c = 3; c <=j; c++) {", 35, 6], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}", 0, 6], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;\nif(j <= 2) { std::cout << 1 << std::endl; return 0 ;}", 53, 5], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;", 0, 5], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;\nstd::cin >> j ;", 15, 4], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;", 0, 4], ["#include <string>\n#include <iostream>\nint main() {\nlong long j, a = 1, b = 1;", 26, 3], ["#include <string>\n#include <iostream>\nint main() {", 0, 3], ["#include <string>\n#include <iostream>\nint main() {\nstd\u2665", 4, 3], ["#include <string>\n#include <iostream>\nint main() {\nstd", 3, 3], ["#include <string>\n#include <iostream>\nint main() {\n", 0, 3], ["#include <string>\n#include <iostream>\nint main() {\n", 0, 3], ["#include <string>\n#include <iostream>\nint main() {", 19, 1], ["#include <string>\n#include <iostream>\nus\nint main() {\n\n", 2, 2], ["#include <string>\n#include <iostream>\nusi\nint main() {\n\n", 3, 2], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\n\n", 20, 4], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\n\n", 0, 4], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstd\n", 3, 4], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\n\n", 0, 4], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstr", 3, 4], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstr", 3, 4], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstri", 4, 4], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\nstd\u2665\u2665", 5, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\nstd", 3, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\n", 0, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetl", 0, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetl", 4, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetli", 5, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(c", 9, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(ci", 10, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cinm", 12, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(", 8, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(c", 9, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(ci", 10, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = s", 19, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.", 22, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length(); ", 32, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length", 28, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j++)m", 47, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j++)", 46, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j", 43, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\nstd", 3, 7], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\n", 0, 7], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout ,, ", 8, 9], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout", 4, 9], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\n", 0, 9], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 0, 51], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 13, 50], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\nEVERYTHING OK", 13, 49], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 49], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 48], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK", 0, 48], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK", 10, 47], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0", 0, 47], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0", 11, 46], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 5\nTime: 0", 0, 46], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 5\nTime: 0", 7, 45], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 5", 0, 45], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 5", 7, 44], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...", 0, 44], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...", 10, 43], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********", 0, 43], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********", 32, 42], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 42], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 41], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK", 0, 41], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK", 10, 40], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0", 0, 40], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0", 11, 39], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0", 0, 39], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2\nTime: 0", 7, 38], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2", 0, 38], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 2", 7, 37], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...", 0, 37], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...", 10, 36], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********", 0, 36], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********", 32, 35], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 35], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 34], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK", 0, 34], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK", 10, 33], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0", 0, 33], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0", 11, 32], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0", 0, 32], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4\nTime: 0", 7, 31], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4", 0, 31], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 4", 7, 30], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 0, 30], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 10, 29], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 0, 29], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 32, 28], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 28], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 27], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 27], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 26], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 26], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 25], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0", 0, 25], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1\nTime: 0", 7, 24], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1", 0, 24], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 1", 7, 23], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 0, 23], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 10, 22], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 0, 22], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 32, 21], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 21], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 20], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK", 0, 20], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK", 10, 19], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0", 0, 19], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0", 11, 18], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0", 0, 18], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0\nTime: 0", 7, 17], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0", 0, 17], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 0", 7, 16], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 0, 16], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 10, 15], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 0, 15], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 32, 14], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 0, 14], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 39, 13], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}\nTesting task...Using parameters: -a0 -f -m25600 -t2000", 54, 12], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}", 0, 12], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;\n}", 1, 11], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;\nreturn 0;}", 10, 10], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}\ncout << endl;return 0;}", 23, 9], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}cout << endl;return 0;}", 0, 9], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];\n}cout << endl;return 0;}", 24, 8], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];", 0, 8], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {\ncout << str[j];", 15, 7], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {", 0, 7], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nfor(long long j = str.length()-1; j >= 0; j--) {", 48, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);", 0, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);", 18, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\n", 1, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\n", 0, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\ni", 1, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {}", 33, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0", 29, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd:L", 5, 7], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd:", 4, 7], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::coutr ,,", 13, 7], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::coutr", 10, 7], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::", 5, 7], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"n", 15, 8], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"ni", 16, 8], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 0, 106], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n\nEVERYTHING OK", 13, 105], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n", 0, 105], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n", 0, 104], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 104], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 103], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 103], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 102], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 102], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 101], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...\nWall: 1\nTime: 0", 0, 101], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...\nWall: 1\nTime: 0", 7, 100], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...\nWall: 1", 0, 100], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...\nWall: 1", 7, 99], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...", 0, 99], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********\nrunning...", 10, 98], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********", 0, 98], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 13.in ********", 32, 97], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 97], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 96], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK", 0, 96], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0\nErrors: OK", 10, 95], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0", 0, 95], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0\nExitCode: 0", 11, 94], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0", 0, 94], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4\nTime: 0", 7, 93], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4", 0, 93], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...\nWall: 4", 7, 92], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...", 0, 92], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********\nrunning...", 10, 91], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********", 0, 91], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 12.in ********", 32, 90], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 90], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 89], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK", 0, 89], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK", 10, 88], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0", 0, 88], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0", 11, 87], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0", 0, 87], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5\nTime: 0", 7, 86], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5", 0, 86], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...\nWall: 5", 7, 85], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...", 0, 85], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********\nrunning...", 10, 84], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 11.in ********running...", 42, 83], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 83], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 82], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK", 0, 82], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK", 10, 81], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0", 0, 81], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0", 11, 80], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0", 0, 80], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0\nTime: 0", 7, 79], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0", 0, 79], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...\nWall: 0", 7, 78], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...", 0, 78], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********\nrunning...", 10, 77], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 10.in ********running...", 42, 76], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 76], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 75], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK", 0, 75], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK", 10, 74], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0", 0, 74], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0", 11, 73], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0", 0, 73], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0", 0, 73], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3\nTime: 0", 7, 72], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3", 0, 72], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...\nWall: 3", 7, 71], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...", 0, 71], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...", 0, 71], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********\nrunning...", 10, 70], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********", 0, 70], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 09.in ********", 32, 69], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 69], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 68], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 68], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 67], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 67], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 67], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 66], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0", 0, 66], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1\nTime: 0", 7, 65], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1", 0, 65], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...\nWall: 1", 7, 64], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...", 0, 64], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********\nrunning...", 10, 63], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********", 0, 63], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 08.in ********", 32, 62], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 62], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 61], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 61], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 60], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 60], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 60], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 59], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0", 0, 59], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1\nTime: 0", 7, 58], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1", 0, 58], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...\nWall: 1", 7, 57], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...", 0, 57], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********\nrunning...", 10, 56], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********", 0, 56], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 07.in ********", 32, 55], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 55], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 55], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 54], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK", 0, 54], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0\nErrors: OK", 10, 53], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0", 0, 53], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0\nExitCode: 0", 11, 52], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0", 0, 52], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3\nTime: 0", 7, 51], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3", 0, 51], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...\nWall: 3", 7, 50], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...", 0, 50], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********\nrunning...", 10, 49], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********", 0, 49], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 06.in ********", 32, 48], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 48], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 47], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 0, 47], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0\nErrors: OK", 10, 46], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 0, 46], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0\nExitCode: 0", 11, 45], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0", 0, 45], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1\nTime: 0", 7, 44], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1", 0, 44], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...\nWall: 1", 7, 43], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...", 0, 43], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********\nrunning...", 10, 42], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********", 0, 42], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 05.in ********", 32, 41], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 41], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 41], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 40], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK", 0, 40], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0\nErrors: OK", 10, 39], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0", 0, 39], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0\nExitCode: 0", 11, 38], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0", 0, 38], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0\nTime: 0", 7, 37], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0", 0, 37], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...\nWall: 0", 7, 36], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...", 0, 36], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********\nrunning...", 10, 35], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********", 0, 35], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 04.in ********", 32, 34], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 34], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 33], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK", 0, 33], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK", 10, 32], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0", 0, 32], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0", 11, 31], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0", 0, 31], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2\nTime: 0", 7, 30], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2", 0, 30], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...\nWall: 2", 7, 29], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 0, 29], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********\nrunning...", 10, 28], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 0, 28], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 0, 28], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 03.in ********", 32, 27], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 27], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 26], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK", 0, 26], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK", 10, 25], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0", 0, 25], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0", 11, 24], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0", 0, 24], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5\nTime: 0", 7, 23], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5", 0, 23], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5", 0, 23], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...\nWall: 5", 7, 22], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 0, 22], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********\nrunning...", 10, 21], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 0, 21], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK\n********* Testing 02.in ********", 32, 20], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 0, 20], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK\nOK", 2, 19], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK", 0, 19], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0\nErrors: OK", 10, 18], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0", 0, 18], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0\nExitCode: 0", 11, 17], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0", 0, 17], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2\nTime: 0", 7, 16], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2", 0, 16], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 2", 7, 15], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 0, 15], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 0, 15], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 10, 14], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********running...", 42, 13], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 0, 13], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 0, 13], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 39, 12], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...", 0, 12], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}\nTesting task...", 15, 11], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}", 0, 11], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}", 0, 11], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}", 0, 11], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;\n}", 1, 10], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;", 0, 10], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}\nreturn 0;", 9, 9], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}", 0, 9], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {\nstd::cout << \"nie\\n\";}", 22, 8], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {", 0, 8], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {\nstd::cout << \"ano\\n\";} else {", 29, 7], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {", 0, 7], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);\nif( str.compare(\"emacs\") == 0) {", 32, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);", 0, 6], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;\ngetline(cin, str);", 18, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;", 0, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nstring str;", 11, 4], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {", 0, 4], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {", 12, 3], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nwh", 2, 4], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nwh", 0, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nwh\n", 0, 5], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\nwh", 2, 4], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\n", 0, 4], ["#include <string>\n#include <iostream>\nusing namespace std;\nint main() {\n", 28, 15], ["#include <iostream>\n#include <string>\nint main() {\nusing namespace std;", 0, 4], ["#include <iostream>\n#include <string>\nint main() {\nusing namespace std;", 20, 3], ["#include <iostream>\n#include <string>\nint main() {\nusing namespace std", 19, 3], ["#include <iostream>\n#include <string>\nint main() {\nusing namespace ", 16, 3], ["#include <iostream>\n#include <string>\nint main() {\nusing ", 6, 3], ["#include <iostream>\n#include <string>\nint main() {\n", 0, 3], ["#include <iostream>\n#include <string>\nint main() {\n", 0, 3], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwh", 2, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwh", 2, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwhi", 3, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwhillel", 7, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\n", 0, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwh", 2, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwhi", 3, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwhile(1) {\n", 1, 5], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwhile(1) {\n", 0, 5], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwhile(1) {\nmom", 3, 5], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwhile(1) {\n", 0, 5], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwhile(1) {\n", 10, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwhile(1\n", 7, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwhile(\n", 6, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwhile(c", 7, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwhile(", 6, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwhile(std::c", 12, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max;\nwhile(std::ci", 14, 3], ["#include <iostream>\n#include <string>\nint main() {\nlong long max\nwhile(std::ci", 13, 3], ["#include <iostream>\n#include <string>\nint main() {\nlong long max, j;j\nwhile(std::ci", 18, 3], ["#include <iostream>\n#include <string>\nint main() {\nlong long max, j;\nwhile(std::ci", 13, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max, j;\nwhile(std::cin >> j) {\n", 1, 5], ["#include <iostream>\n#include <string>\nint main() {\nlong long max, j;\nsrc.cpp: In function 'int main()':\nsrc.cpp:5:22: error: expected '}' at end of input\nsrc.cpp:4:11: warning: unused variable 'max' [-Wunused-variable]\nsrc.cpp:5:22: error: expected '}' at end of input\nCan't compile file.\nwhile(std::cin >> j) {\n", 17, 7], ["#include <iostream>\n#include <string>\nint main() {\nlong long max, j;\nsrc.cpp: In function 'int main()':\nsrc.cpp:5:22: error: expected '}' at end of input\nsrc.cpp:4:11: warning: unused variable 'max' [-Wunused-variable]src.cpp:5:22: error: expected '}' at end of input\nCan't compile file.\nwhile(std::cin >> j) {\n", 81, 6], ["#include <iostream>\n#include <string>\nint main() {\nlong long max, j;\nsrc.cpp: In function 'int main()':\nsrc.cpp:5:22: error: expected '}' at end of input\nCan't compile file.\nwhile(std::cin >> j) {\n", 0, 6], ["#include <iostream>\n#include <string>\nint main() {\nlong long max, j;\nsrc.cpp: In function 'int main()':\nsrc.cpp:5:22: error: expected '}' at end of inputCan't compile file.\nwhile(std::cin >> j) {\n", 49, 5], ["#include <iostream>\n#include <string>\nint main() {\nlong long max, j;\nsrc.cpp: In function 'int main()':\nwhile(std::cin >> j) {\n", 34, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max, j;\nwhile(std::cin >> j) {\n", 13, 3], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\n", 22, 4], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout ,< \n", 13, 7], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout\n", 9, 7], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::\n", 5, 7], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nWRONG ANSWER", 0, 19], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK\nWRONG ANSWER", 12, 18], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK", 0, 18], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0\nErrors: OK", 10, 17], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0", 0, 17], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 5\nTime: 0\nExitCode: 0", 11, 16], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 5\nTime: 0", 0, 16], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 5\nTime: 0", 7, 15], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 5", 0, 15], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...\nWall: 5", 7, 14], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 0, 14], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********\nrunning...", 10, 13], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 0, 13], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000\n********* Testing 01.in ********", 32, 12], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 0, 12], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...\nUsing parameters: -a0 -f -m25600 -t2000", 39, 11], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...", 0, 11], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}\nTesting task...", 15, 10], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}", 0, 10], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}", 1, 9], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}", 1, 9], ["#include <iostream>\n#include <string>\nint main() {\nlong long max=0, j;\nwhile(std::cin >> j) {\nstd::max(max, j);\n}\nstd::cout << max << std::endl;\nreturn 0;\n}", 0, 5]], "game_app.ticks": 99, "submit_app.ok_credit_gain": 700, "game_app.columns": [[true, false, false, false, false, true, false, false, false, true, false, true, false, false, false, true, false, true, false, false, true, true, false, false], [true, false, true, false, false, false, true, false, false, true, false, false, true, true, false, true, true, false, true, false, true, false, true, true], [true, true, true, false, true, false, true, false, false, false, false, true, true, false, true, true, true, true, true, false, false, false, true, true], [false, true, true, false, true, false, false, true, true, true, true, false, true, true, true, true, true, true, false, false, true, true, false, false], [true, false, false, true, true, false, false, false, true, false, false, true, true, true, true, true, true, true, false, false, false, true, true, true], [true, true, false, true, false, false, false, true, true, false, true, true, false, true, true, true, true, true, false, false, true, true, true, false], [true, true, true, true, true, true, false, true, false, true, true, true, false, false, false, true, true, true, false, false, true, false, false, true], [false, true, true, false, true, true, true, true, false, true, true, false, false, true, true, true, false, false, false, false, true, true, true, true], [false, true, false, true, true, true, false, false, false, true, true, true, false, true, false, false, false, false, false, false, false, true, true, true], [true, true, false, false, false, false, true, false, false, true, true, false, true, true, false, false, true, false, true, true, false, true, true, false], [true, true, false, true, true, false, true, false, true, true, true, true, true, false, false, true, true, true, false, true, true, true, false, true], [true, false, true, false, false, false, false, false, false, false, true, false, false, false, false, true, true, true, false, false, true, true, false, false], [true, false, false, false, false, false, true, true, false, false, true, false, true, false, false, true, true, true, true, true, true, true, true, true], [false, true, false, false, true, false, true, false, false, false, true, true, false, false, true, false, true, true, true, false, false, false, true, true], [true, false, false, true, false, false, true, false, false, true, false, true, false, false, true, false, true, true, true, true, true, true, true, false], [true, true, true, false, true, false, false, true, false, true, true, false, false, true, false, false, true, true, false, false, false, true, true, true], [false, true, false, false, true, true, false, true, true, true, false, false, true, false, true, true, false, true, true, true, true, true, true, true], [true, true, true, true, true, false, false, false, false, false, false, true, true, true, true, true, false, true, true, true, false, false, true, true], [false, true, true, true, false, false, true, false, false, true, false, true, true, true, true, true, false, true, false, true, false, true, true, false], [true, true, false, false, false, true, true, true, false, true, false, false, true, true, true, false, true, true, true, true, true, true, false, true], [true, true, false, true, true, false, true, false, true, true, false, false, false, true, true, true, true, true, false, true, true, false, true, true], [true, false, true, true, true, false, false, true, false, true, true, true, true, true, true, true, true, false, false, false, false, true, true, true], [false, false, true, true, true, true, false, true, true, false, true, true, true, false, false, false, true, true, false, false, true, false, true, true], [false, true, true, true, true, false, true, false, true, false, false, true, true, true, false, false, false, true, true, true, true, true, false, true], [true, true, false, true, false, true, false, false, true, true, true, true, true, false, true, true, false, true, true, true, false, true, true, true], [true, true, false, false, true, true, true, true, true, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true], [true, false, true, false, true, false, false, true, false, true, true, true, true, false, true, true, true, false, true, true, false, true, true, true], [true, true, false, false, false, false, true, true, false, true, true, true, true, true, false, true, false, false, true, false, false, false, false, false], [true, true, true, true, false, true, false, true, false, true, true, true, false, true, true, false, true, false, true, true, true, false, false, true], [true, true, true, true, true, true, false, true, false, false, true, false, false, false, true, true, true, false, false, true, false, false, false, false], [true, true, true, false, false, false, true, true, true, true, false, true, false, true, false, true, true, true, true, true, true, true, true, true], [true, true, true, true, true, true, false, true, false, true, true, true, true, true, true, true, true, true, true, false, true, true, false, false], [false, true, false, true, false, false, true, false, true, true, false, true, true, true, false, false, true, true, true, false, true, false, false, false], [false, true, false, true, true, true, true, true, false, true, true, true, true, false, false, true, false, false, true, true, true, false, true, true], [true, true, true, true, false, false, true, true, true, true, true, false, false, true, true, false, true, true, false, false, false, true, true, false], [true, false, true, false, false, true, false, true, true, true, true, true, true, true, false, false, true, true, true, false, false, false, true, true], [true, false, true, true, false, false, true, true, false, true, true, true, false, false, true, true, false, true, true, true, true, false, true, true], [true, false, true, false, false, false, true, true, true, true, true, true, false, true, true, true, false, false, false, true, true, true, false, false], [false, true, false, true, false, true, true, false, false, true, true, true, false, true, true, true, true, true, true, true, true, true, false, false], [true, true, true, true, true, false, true, true, true, false, false, false, false, false, false, false, true, false, false, true, false, true, true, false], [true, true, false, false, true, true, true, true, false, true, true, false, true, true, true, false, false, true, true, false, false, true, false, false], [false, true, false, false, true, true, true, false, true, true, false, false, false, false, true, false, false, false, true, false, true, true, false, false], [false, true, true, true, true, true, true, true, true, true, false, false, false, false, true, true, false, false, true, false, true, true, false, true], [true, false, true, false, true, true, false, true, true, true, true, false, true, false, false, true, true, true, true, true, true, true, false, true], [false, true, true, true, false, true, true, false, true, true, true, false, true, true, false, true, false, false, true, true, true, true, false, false], [true, true, true, false, false, false, false, false, false, true, true, false, true, true, true, false, true, true, true, true, true, false, true, true], [true, false, false, false, true, false, false, false, true, false, true, true, false, true, true, true, false, true, true, true, true, false, false, false], [false, false, false, true, false, true, false, false, true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true], [true, true, true, false, true, true, true, false, true, true, true, false, false, true, false, false, true, true, true, true, true, true, true, true], [false, true, true, true, true, false, false, true, true, true, true, false, false, true, true, true, true, false, true, false, true, true, true, true], [true, true, false, false, true, false, true, false, true, true, false, false, false, false, true, true, false, true, true, false, true, false, false, true], [true, false, true, true, true, true, true, false, true, true, true, true, false, false, false, true, false, true, true, false, true, false, false, true], [true, true, false, true, true, true, true, true, true, false, true, true, true, true, false, true, false, true, true, true, true, true, false, true], [false, true, true, false, false, false, true, true, true, true, true, false, false, false, false, false, true, true, true, true, true, true, true, true], [false, true, true, true, true, false, true, true, false, true, false, true, true, false, true, true, false, true, true, true, true, true, false, false], [true, true, true, false, true, true, false, true, false, true, false, true, true, true, false, false, false, false, true, true, false, false, false, false], [false, true, false, true, false, false, true, false, true, true, true, true, false, false, true, false, true, true, false, false, false, true, true, false], [false, true, false, true, false, false, true, false, false, true, false, true, false, true, true, true, false, true, true, true, false, true, true, true], [true, false, true, false, false, true, true, true, false, false, true, true, true, false, false, true, false, true, true, true, true, true, true, true], [false, false, true, false, true, true, true, false, true, false, true, true, false, true, true, true, false, false, false, true, true, false, false, false], [true, false, true, false, true, true, true, true, false, false, false, true, false, true, true, true, true, true, true, false, false, false, true, true], [true, false, false, false, false, true, true, false, true, true, true, false, true, true, true, true, true, false, true, false, true, false, true, true], [false, true, true, false, false, true, true, true, true, false, false, true, true, true, true, true, false, true, true, true, false, false, false, false], [false, true, true, false, false, false, true, true, true, false, false, true, false, true, true, true, true, true, false, true, false, false, false, true], [true, true, true, false, true, false, false, false, true, true, true, true, false, true, true, false, false, true, true, false, true, true, false, false], [false, false, false, true, true, false, true, false, true, true, true, false, true, false, true, true, false, true, true, true, true, true, false, true], [true, true, false, true, true, true, true, true, false, false, true, false, false, true, false, true, false, true, false, false, false, false, true, false], [true, false, true, true, true, true, true, true, false, true, true, true, false, false, true, false, false, false, true, true, false, true, false, true], [true, false, false, true, true, false, false, true, true, true, true, true, true, true, true, false, false, true, true, true, true, false, true, false], [true, true, false, true, false, false, false, true, true, false, false, true, true, true, false, false, false, false, false, true, false, true, false, true], [true, true, true, true, false, true, true, true, false, true, true, false, false, true, true, true, false, true, true, true, true, false, true, true], [false, true, false, true, true, false, false, true, true, true, true, true, false, true, false, false, false, true, true, true, false, false, true, false], [true, false, false, false, true, false, true, true, true, true, false, true, false, true, false, true, false, false, false, true, false, false, false, false], [true, false, true, true, true, true, false, false, false, true, true, false, true, false, true, false, false, false, true, false, false, true, false, true], [true, true, true, true, false, true, true, true, true, true, true, true, false, true, false, true, true, false, false, true, false, true, true, true], [false, true, false, true, false, true, false, true, true, true, true, false, true, true, true, true, true, true, true, false, true, false, true, true], [true, false, false, false, true, false, true, true, true, true, true, true, false, true, true, false, true, false, false, true, false, true, true, true], [true, true, false, true, false, true, true, true, false, false, false, false, false, true, false, true, true, false, false, true, false, false, false, false], [true, true, true, false, true, true, false, false, false, false, true, true, false, true, false, true, true, true, false, true, false, true, true, false], [true, false, true, true, false, true, false, false, true, true, false, true, false, true, true, true, false, false, true, false, true, true, false, true]], "win_warn": 20, "config_app.used_codes": {"gg883": true, "mu438vvw4": true, "akhhu6y74": true, "d2bgamvzx": true, "teur4xvg": true, "5bkncb9w8": true, "5qxap": true, "y9tbx": true, "3fgys": true, "udjp2": true, "3twg6": true, "zavx66": true, "dy3czwt": true, "uncf9": true, "d2qb7pqz": true, "2y32hp": true, "5ceq9667w": true, "rvh8x9ysr": true, "cu7axbk": true, "ukwmad8h": true, "gsp96": true, "m3aqx": true, "skh64zdjs": true, "t9my9e3dt": true, "35hvj": true, "m83cd": true, "vpghkk": true, "yv9w6": true, "ebcr6": true, "dmbvwzm": true, "caw9sw8": true, "hbg2pzb": true, "ztb8d": true, "mejzc7": true, "w8x3d": true, "fpyr4": true, "7e7a2b": true, "4wbgt4n": true, "zrxrwftzy": true, "3wvpr": true, "6c8m9": true, "55qys3a": true, "jp3z5sa3k": true, "tp4hjvqdq": true, "2t8k8": true, "yy4aapdrp": true, "pr77y": true, "78ykvyf": true, "56p23kn": true, "d4mhh": true, "3jz33gc": true, "saze5zf": true, "s8yv7v2m": true, "gyqn7wb": true, "rexzer": true}, "editor_app.price_command": 3, "editor_app.last_command": 99, "editor_app.price_submit": 200, "game_app.x": 20, "game_app.y": 12, "config_app.credits": 11814, "editor_app.content": ["#include <iostream>", "#include <string>", "int main() {", "long long max=0, j;", "while(std::cin >> j) {", "max = std::max(max, j);", "Testing task...", "Using parameters: -a0 -f -m25600 -t2000", "********* Testing 01.in ********", "running...", "Wall: 4", "Time: 0", "ExitCode: 0", "Errors: OK", "OK", "********* Testing 02.in ********", "running...", "Wall: 4", "Time: 0", "ExitCode: 0", "Errors: OK", "OK", "********* Testing 03.in ********", "running...", "Wall: 1", "Time: 0", "ExitCode: 0", "Errors: OK", "OK", "********* Testing 04.in ********", "running...", "Wall: 3", "Time: 0", "ExitCode: 0", "Errors: OK", "OK", "", "EVERYTHING OK", "}", "std::cout << max << std::endl;", "return 0;", "}"], "editor_app.y": 5, "editor_app.x": 6, "game_app.speed": 30, "game_app.speed_choices": [10, 20, 30, 40, 60, 80], "game_app.enemies": [[true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true], [true, true, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true], [true, true, true, true, false, true, true, true, true, true, true, false, true, true, true, true, true, true, true, false, true, true, true, true], [true, true, true, false, true, true, false, true, true, true, true, true, false, true, true, true, true, true, true, true, true, true, false, true], [true, false, true, false, false, true, true, false, false, true, false, true, false, true, false, true, true, true, false, true, true, false, true, true], [true, true, true, true, true, true, true, true, false, false, true, true, false, true, true, true, true, true, true, true, true, false, true, false], [false, false, false, true, false, true, true, true, true, false, false, true, false, false, false, false, true, false, false, false, false, false, true, true], [false, false, false, false, true, false, false, false, false, false, false, false, false, false, false, false, true, false, true, false, false, false, false, true], [true, false, false, false, false, false, false, false, false, false, false, false, false, true, false, false, true, false, true, false, false, false, true, false], [false, false, false, false, false, true, false, false, false, true, true, false, false, false, false, false, false, false, true, false, true, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false], [false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false]], "config_app.features": {"parens": false, "horse": false, "spellcheck": false, "nocursor": false, "double": false, "nostatus": false, "180": false, "large": false, "rot13": false, "green": false, "highlight": false, "japan": false, "noresult": false, "ide": true}, "config_app.prices": {"parens": 1200, "horse": 480, "spellcheck": 780, "nocursor": 660, "double": 360, "nostatus": 1020, "180": 1080, "large": 360, "rot13": 780, "green": 480, "highlight": 540, "japan": 900, "noresult": 300, "ide": 1800}, "game_app.ticks_newspeed": 687, "editor_app.scroll": 0, "editor_app.highlight": {"\u2191": [1, 0.0841107419847602, 0.151823867459425], "\u2190": [0.04511207258617089, 1, 0.3652653890511498], "\u2193": [0.22360212467019136, 0.24579313325652907, 1], "\u2192": [1, 0.9159348441968321, 0.13877961940237893], "!": [1, 0.5410416452770388, 0.46260522831739326], " ": [0.7, 0.7, 0.7], "#": [0.869846579008926, 1, 0.23721695609811755], "\"": [1, 0.17245067083875054, 0.2527400457409289], "&": [1, 0.703992702203416, 0.35259415758583024], ")": [0.6006156872795108, 0.36685970515415556, 1], "(": [1, 0.2731604864126923, 0.7539851030204051], "+": [1, 0.31220846051131046, 0.036908480407362276], "-": [1, 0.30302307105194126, 0.32177304341567425], "/": [1, 0.4853536700664206, 0.39169305485529304], "0": [0.1441551526940109, 0.08794102135299997, 1], "3": [0.021227567183560336, 0.08122746801002079, 1], "2": [1, 0.4485561209640324, 0.6149897479233337], "5": [0.675190108949852, 0.4431135650074385, 1], "4": [0.6162677244372657, 0.2849510726565452, 1], "7": [0.9939317562629473, 1, 0.029399036650137655], "9": [0.8656640916634957, 1, 0.335454148838902], "8": [0.6159898704482056, 0.4336630662684774, 1], ";": [0.09198917043534871, 1, 0.29793183556938363], ":": [0.29182025157527314, 1, 0.44958227374665927], "=": [1, 0.8745710151873781, 0.33441615109031253], "<": [0.7289836997940284, 1, 0.018401809164420357], ">": [0.6673117530685819, 1, 0.1537057279028209], "A": [0.23374731301812035, 1, 0.030701654930065825], "@": [0.28916413874779634, 1, 0.04828224301719808], "C": [0.10321361222947001, 1, 0.4584771655213298], "E": [0.9655482550578711, 0.11959366338231714, 1], "D": [1, 0.09732987452128461, 0.045724106792199515], "G": [0.9567774376850905, 1, 0.38114367483954914], "F": [1, 0.12758965116530363, 0.5231728591761003], "I": [0.11331539784780409, 0.7777347757473813, 1], "K": [0.48365054897391824, 0.1296320492426868, 1], "J": [1, 0.2784166418981139, 0.15227491770176504], "M": [1, 0.180256055553231, 0.007883422155707587], "L": [1, 0.26932851761529353, 0.061984286291268176], "O": [0.4098949141276884, 1, 0.9102532300509931], "P": [0.38849215925585656, 0.8831986897494314, 1], "S": [1, 0.7218716832837193, 0.09326554220707362], "R": [0.6491118888637573, 1, 0.25087859701374204], "U": [0.09308246943284304, 1, 0.21419396664816504], "T": [0.6307209628965202, 0.26093962511183677, 1], "W": [1, 0.07605201726321731, 0.30905214069594733], "Y": [0.4196519847757013, 1, 0.331954500553318], "e": [0.6816862530719515, 1, 0.12284575468502035], "Z": [0.4709584605933378, 1, 0.46050113708717844], "]": [0.014028471668457332, 0.34022146527986463, 1], "\\": [0.9488176348436025, 1, 0.4273740475477763], "_": [1, 0.5114768689845693, 0.1347395082514835], "a": [0.36008671871608866, 1, 0.24871007908614007], "`": [1, 0.5856711232459755, 0.1168607109867531], "c": [1, 0.3348324179967317, 0.41635938529491145], "b": [0.3179664766883028, 1, 0.3207561188278184], "\u2665": [0.8728979535995278, 1, 0.3693778970325481], "d": [0.591363195249732, 0.3935438894221466, 1], "g": [1, 0.44707756575111346, 0.09421530938698153], "f": [1, 0.4408910495009086, 0.3196299866117982], "i": [0.4982727198279028, 0.7847742649367223, 1], "h": [0.09010304986235251, 0.16887382570050125, 1], "k": [0.9831358907761835, 1, 0.49116548993549014], "j": [0.4006167329851025, 0.6817740703057759, 1], "m": [0.141605433196468, 1, 0.7316262487111858], "l": [1, 0.71834996391459, 0.2232747744780017], "o": [0.10457566350578906, 1, 0.8517434450137543], "n": [0.24608545704483187, 0.40731998507416844, 1], "q": [0.11517053251328901, 1, 0.4903493048445099], "p": [1, 0.35109127003170393, 0.12743406681926617], "s": [0.1864702961864737, 0.9605806212857104, 1], "r": [1, 0.25978247596538073, 0.0661674460422621], "u": [1, 0.8513187263433558, 0.22881776748424343], "t": [0.08207463367858825, 0.21582062253730483, 1], "w": [1, 0.1971488356371136, 0.7259641790461879], "v": [0.5843704127643701, 1, 0.16989529594329256], "y": [0.15883034829261256, 0.05196108626633056, 1], "{": [1, 0.8314180223138308, 0.10418866406199889], "z": [0.16429534416303881, 1, 0.2973832806977804], "}": [1, 0.6399533931414312, 0.474807691119854], "|": [0.3926742139600412, 1, 0.525841421607764], "~": [0.03504199020185439, 1, 0.4317890636143056]}, "submit_app.task": 11, "config_app.base_gain": 100, "editor_app.price_insert": 2}